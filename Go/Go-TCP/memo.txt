◆サーバー (server.go) の処理の流れ
１．ポートの設定とリスニング
　・サーバーはポート :8080 でリッスンを開始する。
　・net.Listen("tcp", ":8080") を呼び出して、TCP 接続のリスナーを作成する。

２．クライアントからの接続待機
　・listener.Accept() を呼び出して、クライアントからの接続を待機する。
　・接続が確立すると、新しい net.Conn オブジェクトが返される。

３．接続ごとにゴルーチンを開始
　・各クライアント接続に対して、新しいゴルーチンが開始される (go handleConnection(conn))。
　・ゴルーチン内では、クライアントからのメッセージの読み取りと応答が行われる。

４．メッセージの受信と応答
　・handleConnection() 関数が呼び出され、クライアントからのメッセージを読み取る。
　・受信したメッセージに応じて、"Message received: " という応答を生成し、クライアントに送信する。


◆クライアント (client.go) の処理の流れ
１．サーバーへの接続
　・net.Dial("tcp", "localhost:8080") を呼び出して、サーバーに対してTCP接続を開始する。

２．ユーザーからのメッセージの入力
　・os.Stdin からの入力を受け取るための bufio.NewReader(os.Stdin) を使用し、ユーザーからの入力を待機する。

３．メッセージの送信
　・ユーザーからの入力をサーバーに送信するために、conn.Write([]byte(message)) を呼び出す。
　・メッセージはサーバーに直接送信される。

４．サーバーからの応答の受信
　・bufio.NewReader(conn).ReadString('\n') を使って、サーバーからの応答を待機する。
　・サーバーからの応答が読み取られ、コンソールに表示される。